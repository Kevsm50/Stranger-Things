{"version":3,"sources":["components/Home.js","utils/api.js","components/Posts.js","components/Account.js","components/FeaturedPost.js","components/app.js","index.js"],"names":["Home","userData","user","token","messages","map","message","idx","fromUser","_id","className","post","title","content","index","username","BASE_URL","apiCall","url","method","body","options","toUpperCase","headers","JSON","stringify","fetch","response","json","data","error","console","fetchPosts","posts","loginUser","password","login","registerUser","registration","submitPost","description","price","location","willDeliver","deletePost","postId","success","submitMessage","log","fetchUser","Posts","setPosts","setFeaturedPost","useState","search","setSearch","setTitle","setDescription","setPrice","setLocation","setWillDeliver","history","useHistory","useEffect","getPosts","handleSubmitPost","e","preventDefault","newPost","handleDeletePost","stopPropagation","remainingPost","filter","p","Id","onChange","target","value","type","name","placeholder","onSubmit","htmlFor","checked","id","toLowerCase","includes","searchMatches","onClick","push","alert","handlePostClick","author","Account","setUser","setToken","setUserData","setUsername","setPassword","isRegistering","setIsRegistering","handleSubmit","event","required","FeaturedPost","featuredPost","setContent","handleSubmitMessage","useParams","newMessage","newArr","Object","assign","App","setNewPost","exact","to","activeClassName","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1d9bdad.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Home = ({ userData, user, token }) => {\n\n    return <>     \n    <h1>Welcome to Stranger's Things</h1>\n    {user && token && <h2>My sent Messages</h2> }\n        {userData.messages?.map((message, idx) => {\n            if (message.fromUser._id === userData._id) {\n                return (\n                    <div className=\"messages\" key={`${message._id} ${idx}` }>\n                        <div><b>Title:</b>{message.post.title}</div>\n                        <div><b>Messager:</b>{message.content}</div>\n                    </div>\n                )\n            }\n        })}\n    \n    {user && token && <h2>My recived Messages</h2> }    \n        {userData.messages?.map((message, index) => {\n                if (message.fromUser._id !== userData._id) {\n                    return (\n                        <div className=\"messages\" key={index}>\n                            <div><b>Title:</b>{message.post.title}</div>\n                            <div><b>Sender:</b>{message.fromUser.username}</div>\n                            <div><b>Messager:</b>{message.content}</div>\n                        </div>\n                    )\n                }\n        })}\n    </>\n    }\n\nexport default Home\n","export const BASE_URL = 'https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT'\n\nexport const apiCall = async (url, method='GET', token, body) => {\n    try {\n        const options = {\n            method: method ? method.toUpperCase() : 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        };\n\n        if(token) {\n            options.headers['Authorization'] = `Bearer ${token}`;\n        }\n\n        const response = await fetch(BASE_URL + url, options);\n        const data = await response.json();\n\n        if(data.error){\n            throw data.error;\n        }\n\n        return data\n\n    } catch (error) {\n        console.error('ERROR: ', error)\n    }\n}\n\nexport const fetchPosts = async (token) => {\n    const data = await apiCall('/posts', \"GET\", token)\n    //console.log(data)\n    if(!data || !data.data){\n        return []\n    }\n    return data.data.posts || []\n}\n\nexport const loginUser = async(username, password) => {\n    const login = await apiCall('/users/login', \"POST\", null, {\n        user: {username, password}\n    })\n    return login\n\n}\n\nexport const registerUser = async(username, password) => {\n    const registration = await apiCall('/users/register', \"POST\", null, {\n        user: {username, password}\n    })\n    return registration\n}\n\nexport const submitPost = async(token, title, description, price, location, willDeliver) => {\n    const data = await apiCall('/posts', \"POST\", token, {\n        post: {title, description, price, location, willDeliver}\n    })\n    return data.data.post\n}\n\nexport const deletePost = async(token, postId) => {\n    const data = await apiCall(`/posts/${postId}`, \"DELETE\", token);\n    return data.success\n}\n\nexport const submitMessage = async(token, postId, message) => {\n    const data = await apiCall(\n        `/posts/${postId}/messages`, \n        \"POST\", \n        token, \n        {\n            message: {content: message}\n        })\n        console.log(data)\n        return data.data.message\n}\n\nexport const fetchUser = async(token) => {\n    const data = await apiCall(`/users/me`, \"GET\", token)\n    return data\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { deletePost, submitPost, fetchPosts} from \"../utils/api\";\n\nconst Posts = ({user, token, posts, setPosts, setFeaturedPost}) => {\n    const [search, setSearch] = useState('');\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [location, setLocation] = useState('');\n    const [willDeliver, setWillDeliver] = useState(false)\n\n    const history = useHistory();\n\n    const searchMatches = (post) => {\n        return `${post.title} ${post.location} ${post.description}`\n        .toLowerCase()\n        .includes(search.toLowerCase()) \n    }\n\n    const handlePostClick = (e, post) => {\n      if (user && token) {\n        history.push(`/posts/${post._id}`)\n        setFeaturedPost(post)\n      } else {\n        alert('Please log in')\n      }\n    }\n\n    useEffect(() => {\n        (async () => {\n            const getPosts = await fetchPosts(token);\n            setPosts(getPosts)\n        })()\n    }, [])\n\n    const handleSubmitPost = async (e) => {\n      e.preventDefault();\n      const newPost = await submitPost(token, title, description, price, location, willDeliver);\n      setPosts([...posts , newPost]);\n    }\n\n    const handleDeletePost = async (e, postId) => {\n      e.stopPropagation();\n      const isDeleted = await deletePost(token, postId);\n      if (isDeleted){\n        const remainingPost = posts.filter(p => p.Id != postId)\n        setPosts(remainingPost)\n      }\n    }\n\n    return <>\n      <h1>Posts</h1>\n      <input className=\"searchInput\" onChange={(e) => {\n        setSearch(e.target.value)\n      }}\n        type=\"text\" name=\"search\" placeholder=\"search\"\n      />\n\n      {user && token && \n        <form onSubmit={handleSubmitPost}>\n          <input \n            onChange={(e) => setTitle(e.target.value)}\n            type=\"text\" name=\"title\" placeholder=\"Title\" value={title}>\n          </input>\n\n          <input \n            onChange={(e) => setDescription(e.target.value)}\n            type=\"text\" name=\"description\" placeholder=\"Description\" value={description}>          \n          </input>\n\n          <input \n            onChange={(e) => setPrice(e.target.value)}\n            type=\"number\" name=\"price\" placeholder=\"Price\" value={price}>          \n          </input>\n\n          <input \n            onChange={(e) => setLocation(e.target.value)}\n            type=\"text\" name=\"location\" placeholder=\"Location\" value={location}>          \n          </input>\n\n          <label htmlFor=\"checkbox\">Will Deliver!</label>\n          <div>{willDeliver ? \"Checked\" : \"Not checked\"}\n          <input\n            type=\"checkbox\"\n            checked={willDeliver}\n            id=\"checkbox\"\n            onChange={() => setWillDeliver(!willDeliver)}\n            value={willDeliver}\n          />          \n          </div>\n          <button type=\"submit\">Submit Post</button>\n        </form>\n      }\n\n      <ul>\n        {\n          posts.filter(post => {\n            return searchMatches(post)\n          }).map(post => {\n            return <li onClick={(e) => {handlePostClick(e, post)}} className=\"postInfo\" key={post._id}>\n              <h1>{ post.title }</h1>\n              <div>{ post.description }</div>\n              <h3>{ `Price: ${post.price}` }</h3>\n              <h3>{ `Location: ${post.location}` }</h3>\n              {user && token && (post.author.username == user) &&\n                <button onClick={(e) => handleDeletePost(e, post._id)}>Delete Post</button>\n              }\n            </li>\n          })\n        }\n      </ul>\n    </>\n}\n\nexport default Posts","import React, {useState} from \"react\";\nimport { loginUser, registerUser, fetchUser } from \"../utils/api\";\n\nconst Account = ({user, setUser, token, setToken, setUserData}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isRegistering, setIsRegistering] = useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if(isRegistering){\n            const registration = await registerUser(username, password);\n            setUser(username);\n            setToken(registration.data.token);\n        } else{\n            const login = await loginUser(username, password);\n            setUser(username);\n            setToken(login.data.token)\n\n            const data = await fetchUser(login.data.token);\n            setUserData(data.data)\n        }\n    }\n\n    const toggleRegistration = () => {\n        setIsRegistering(!isRegistering)\n    }\n\n    const handleLogout = () => {\n        setUser(false);\n        setToken('');\n    }\n\n    return <>\n    {\n        (user && token) \n        ? <>\n            <h1>User Profile</h1>\n            <p>{user} logged in</p>\n            <button onClick={handleLogout}>Logout</button>\n        </> \n        : <>\n            <h1>{isRegistering ? \"Registering\" : \"Login\"}</h1>\n            <form onSubmit={handleSubmit} className=\"form\">\n                <input\n                    className=\"loginInput\"\n                    onChange={(event) => setUsername(event.target.value)}\n                    required\n                    name=\"username\"\n                    type=\"text\"\n                    placeholder=\"username\"\n                    value={username}>\n                </input>\n                <input\n                    className=\"loginInput\"\n                    onChange={(event) => setPassword(event.target.value)}\n                    required\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={password}\n                ></input>\n                <button type=\"submit\">Submit</button>\n            </form>\n            <button onClick={toggleRegistration}>Register/Login toggle</button>\n        </>\n    }\n    </>\n}\n\nexport default Account","import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { submitMessage } from \"../utils/api\";\n\n\nconst FeaturedPost = ({\n    user, token, \n    featuredPost, setFeaturedPost, \n    userData\n}) => {\n    const [content, setContent] = useState('');\n    const history = useHistory();\n    const {postId} = useParams();\n\n    const handleClose = (e) => {\n        setFeaturedPost(false);\n        history.push('/posts')\n\n    }\n    \n    const handleSubmitMessage = async(e) => {\n        e.preventDefault();\n        const newMessage = await submitMessage(token, featuredPost._id, content);\n        const newArr = ([newMessage, ...featuredPost.messages]);\n        const newPost = Object.assign(featuredPost, {messages: newArr});\n        setFeaturedPost(newPost);\n        setContent('');\n    }\n\n    return <div className=\"featured-post\">\n        <h1>{featuredPost.title}</h1>\n        <p>{featuredPost.description}</p>\n        <p><b>Price:</b> {featuredPost.price}</p>\n        <p><b>Posted by:</b> {featuredPost.author.username}</p>\n        <p><b>Location:</b> {featuredPost.location}</p>\n        <p><b>Will deliver:</b>{ featuredPost.willDeliver ? 'yes' : \"no\"}</p>\n\n        <section>\n            <h1>Messages</h1>\n            <ul>\n                {featuredPost.messages && \n                featuredPost.messages.map(message => {\n                    return <li key= { message._id }>\n                        <span>{ message.content }</span>\n                    </li>\n                })}\n            </ul>\n        </section>\n\n        {user && token && !(featuredPost.author._id == userData._id) && \n            <form className=\"message-form\" onSubmit={handleSubmitMessage}>\n                <input\n                className=\"messageInput\"\n                onChange={ (e) => setContent(e.target.value)}\n                type=\"text\" \n                name=\"message\"\n                placeholder=\"message\"\n                value={content}/>\n                <button type=\"submit\">Submit Message</button>\n            </form>\n        }\n        <button onClick={handleClose}>Close</button>\n    </div>\n}\n\nexport default FeaturedPost","import React, { useState } from \"react\";\nimport { NavLink, Route } from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport Posts from \"./Posts\";\nimport Account from \"./Account\";\nimport FeaturedPost from \"./FeaturedPost\";\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [featuredPost, setFeaturedPost] = useState('');\n    const [message, setMessage] = useState([]);\n    const [newPost, setNewPost] = useState(false);\n    const [user, setUser] = useState(false);\n    const [token, setToken] = useState('');\n    const [userData, setUserData] = useState(false); \n\n    return <main>\n        <nav>\n            <NavLink exact to=\"/\" className=\"navlink\" activeClassName=\"active\">\n                Account\n            </NavLink>\n\n            <NavLink to=\"/posts\" className=\"navlink\" activeClassName=\"active\">\n                Posts\n            </NavLink>\n\n            <NavLink to=\"/login\" className=\"navlink\" activeClassName=\"active\">\n                Login\n            </NavLink>\n        </nav>\n\n        <Route exact path='/'>\n            <Home \n                user={user} \n                token={token} \n                userData={userData} setUserData={setUserData}\n            />\n        </Route>\n        <Route path=\"/posts\">\n            <Route path=\"/posts/:postId\">\n                {user && token && \n                    <FeaturedPost \n                        user={user}\n                        token={token}\n                        userData={userData}\n                        setUserData={setUserData}\n                        featuredPost={featuredPost}\n                        setFeaturedPost={setFeaturedPost}\n                    />\n                }\n            </Route>\n            <Posts\n                user={user} token={token} \n                posts={posts} setPosts={setPosts} \n                newPost={newPost} setNewPost={setNewPost}\n                featuredPost={featuredPost} setFeaturedPost={setFeaturedPost}\n            />\n        </Route>\n        <Route path=\"/login\">\n            <Account \n                user={user} setUser={setUser}\n                userData={userData} setUserData={setUserData}\n                token={token} setToken={setToken}\n            />\n        </Route>\n    </main>\n}\n\nexport default App","import React from \"react\"; \nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\"\n\nimport { App } from './components'\n\nimport './style.css'\n\nReactDOM.render(\n    <BrowserRouter>\n     <App/>\n    </BrowserRouter>,\n    document.getElementById('app')\n)"],"sourceRoot":""}